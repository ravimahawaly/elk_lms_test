input {
        tcp {
                port => 5000
                codec => "json_lines"
        }
        beats {
        port => 5044
#        ssl => true
#        ssl_certificate_authorities => ["/usr/share/logstash/config/ca.crt"]
#        ssl_certificate => "/usr/share/logstash/config/logstash-input.crt"
#        ssl_key => "/usr/share/logstash/config/logstash-input.key"
#        ssl_verify_mode => "force_peer"
        }
}
 
#filter {
#if "system-logs" in [tags] {
#  grok {
#    match => { "message" => "%SYSLOGLINE" }
#  }
#  date {
#    match => [ "timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss"]
#  }
#}}

filter {
if "dev-api-logs" in [tags] {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:loglevel}  %{JAVACLASS:class} - %{GREEDYDATA:log_message}" }
}
  date {
      match => ["timestamp", "YYYY-MM-dd HH:mm:ss"]
      timezone => "UTC"
    }
    mutate {
      remove_field => ["timestamp"]
    }
}
}

filter {
if "hdm52" in [tags] {
  grok {
    match => {
      "message" => [
        # Match "to=" lines
        "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{PROG:process_name}\[%{INT:pid}\]: %{WORD:queue_id}: to=<%{GREEDYDATA:to_address}>, delay=%{NUMBER:delay:float}, xdelay=%{NUMBER:xdelay:float}, mailer=%{WORD:mailer}, pri=%{INT:priority:int}, relay=(\[%{IP:relay_ip}\]|%{HOSTNAME:relay_host}), dsn=%{GREEDYDATA:dsn}, stat=%{GREEDYDATA:status}",

        # Match "from=" lines
        "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{PROG:process_name}\[%{INT:pid}\]: %{WORD:queue_id}: from=<%{GREEDYDATA:from_address}>, size=%{INT:size:int}, class=%{INT:class:int}, nrcpts=%{INT:recipient_count:int}, msgid=<%{GREEDYDATA:message_id}>, proto=%{WORD:protocol}, daemon=%{WORD:daemon}, relay=(\[%{IP:relay_ip}\]|%{HOSTNAME:relay_host})",

        # Match STARTTLS
        "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{PROG:process_name}\[%{INT:pid}\]: STARTTLS=%{GREEDYDATA:starttls_details}",

        # Match connections (connect from / disconnect from)
        "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{PROG:process_name}\[%{INT:pid}\]: %{GREEDYDATA:connection_info}"
      ]
    }
    tag_on_failure => ["_grokparsefailure_sendmail"]
  }

  # Convert numeric fields
  mutate {
    convert => { "delay" => "float" "xdelay" => "float" "size" => "integer" "class" => "integer" "recipient_count" => "integer" "priority" => "integer" }
  }

  # Add a type field based on which values exist
  if [to_address] {
    mutate { add_field => { "log_type" => "to" } }
  } else if [from_address] {
    mutate { add_field => { "log_type" => "from" } }
  } else if [starttls_details] {
    mutate { add_field => { "log_type" => "starttls" } }
  } else if [connection_info] {
    mutate { add_field => { "log_type" => "connection" } }
  }
}}



#if "system-logs" in [tags] {
#  elasticsearch {
#    hosts => ["10.15.1.170:9200"]
#    index => "syslog-%{+YYYY.MM.dd}"
#    # If you have security enabled, add user/password here
#ilm_rollover_alias => "tds-bis"
#ilm_pattern => "000001"
#  }
#  stdout { codec => rubydebug }
#}}

output {
if "dev-api-logs" in [tags] {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "dos-canvas-app-logs"
    user => "elastic"
    password => "elastic"
    # If you have security enabled, add user/password here
#ilm_rollover_alias => "flight-search"
#ilm_pattern => "000001"
  }
  stdout { codec => rubydebug }
}}


output {
if "hdm52" in [tags] {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "hdm52-mail-logs-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "elastic"
    # If you have security enabled, add user/password here
#ilm_rollover_alias => "flight-search"
#ilm_pattern => "000001"
  }
  stdout { codec => rubydebug }
}}

